0	g661	=	(g662)
1	g662	=	(program EOF)
2	program	=	(funcdecl)
3	program	=	(funcdecl program)
4	statement	=	(decl SEMICOLON)
5	statement	=	(return SEMICOLON)
6	statement	=	(if)
7	statement	=	(loop)
8	statement-list	=	(statement)
9	statement-list	=	(statement statement-list)
10	type	=	(NUMTYPE)
11	type	=	(STRINGTYPE)
12	type	=	(STRINGITERTYPE)
13	type	=	(NUMITERTYPE)
14	range	=	(LBRACE NUM COMMA NUM RBRACE)
15	arg	=	(type VAR)
16	arg	=	(type VAR range)
17	arg	=	(NUMTYPE range VAR)
18	arg	=	(NUMITERTYPE range range VAR)
19	arg	=	(STRINGTYPE range VAR)
20	arg	=	(STRINGITERTYPE range range VAR)
21	argslist	=	(arg)
22	argslist	=	(arg COMMA argslist)
23	funcdecl	=	(type range VAR LPAREN RPAREN LBRACE statement-list RBRACE)
24	funcdecl	=	(type VAR LPAREN RPAREN LBRACE statement-list RBRACE)
25	funcdecl	=	(type range VAR LPAREN argslist RPAREN LBRACE statement-list RBRACE)
26	funcdecl	=	(type VAR LPAREN argslist RPAREN LBRACE statement-list RBRACE)
27	decl	=	(type VAR = expr)
28	return	=	(RETURN expr)
29	conditional	=	(compare)
30	conditional	=	(expr)
31	if	=	(IF LPAREN conditional RPAREN LBRACE statement-list RBRACE)
32	if	=	(IF LPAREN conditional RPAREN LBRACE statement-list RBRACE ELSE LBRACE statement-list RBRACE)
33	iterator	=	(VAR)
34	iterator	=	(NUM)
35	iterator-body	=	(VAR COLON iterator)
36	iterator-body	=	(VAR COLON iterator COMMA VAR COLON iterator)
37	iter-decl	=	(decl)
38	iter-decl	=	(type VAR)
39	for-body	=	(expr SEMICOLON)
40	for-body	=	(statement for-body)
41	loop	=	(FOR LPAREN iterator-body RPAREN LBRACE for-body RBRACE)
42	loop	=	(FOR LPAREN iterator-body PIPE iter-decl RPAREN LBRACE for-body RBRACE)
43	binaryfn	=	(CONCAT)
44	binaryfn	=	(APPEND)
45	binaryfn	=	(EQUALS)
46	binaryfn	=	(ITER_CONCAT)
47	binaryfn	=	(SPLIT)
48	unaryfn	=	(STR_LENGTH)
49	unaryfn	=	(FIRST)
50	unaryfn	=	(ITER_LENGTH)
51	unaryfn	=	(STON)
52	unaryfn	=	(NTOS)
53	userfn-argslist	=	(expr)
54	userfn-argslist	=	(expr COMMA userfn-argslist)
55	userfn	=	(VAR LPAREN userfn-argslist RPAREN)
56	expr	=	(expr OR expr)
57	expr	=	(expr AND expr)
58	expr	=	(expr + expr)
59	expr	=	(expr - expr)
60	expr	=	(expr * expr)
61	expr	=	(expr / expr)
62	expr	=	(! expr)
63	expr	=	(userfn)
64	expr	=	(unaryfn LPAREN expr RPAREN)
65	expr	=	(binaryfn LPAREN expr COMMA expr RPAREN)
66	expr	=	(VAR)
67	expr	=	(NUM)
68	expr	=	(STR)
69	compare	=	(expr < expr)
70	compare	=	(expr > expr)
71	compare	=	(expr <= expr)
72	compare	=	(expr >= expr)
73	compare	=	(expr == expr)
State 0
	g661 -> . g662 

	funcdecl					goto	4
	type					goto	3
	program					goto	2
	STRINGITERTYPE					shift	7
	NUMITERTYPE					shift	8
	NUMTYPE					shift	5
	g662					goto	1
	STRINGTYPE					shift	6

State 1
	g661 -> g662 . 


State 2
	g662 -> program . EOF 

	EOF					accept	

State 3
	funcdecl -> type . range VAR LPAREN RPAREN LBRACE statement-list RBRACE 
	funcdecl -> type . VAR LPAREN RPAREN LBRACE statement-list RBRACE 
	funcdecl -> type . range VAR LPAREN argslist RPAREN LBRACE statement-list RBRACE 
	funcdecl -> type . VAR LPAREN argslist RPAREN LBRACE statement-list RBRACE 

	LBRACE					shift	11
	range					goto	10
	VAR					shift	12

State 4
	program -> funcdecl . 
	program -> funcdecl . program 

	funcdecl					goto	4
	type					goto	3
	program					goto	13
	STRINGITERTYPE					shift	7
	NUMITERTYPE					shift	8
	EOF					reduce	2
	NUMTYPE					shift	5
	STRINGTYPE					shift	6

State 5
	type -> NUMTYPE . 

	LBRACE					reduce	10
	VAR					reduce	10

State 6
	type -> STRINGTYPE . 

	LBRACE					reduce	11
	VAR					reduce	11

State 7
	type -> STRINGITERTYPE . 

	LBRACE					reduce	12
	VAR					reduce	12

State 8
	type -> NUMITERTYPE . 

	LBRACE					reduce	13
	VAR					reduce	13

State 9
	g662 -> program EOF . 


State 10
	funcdecl -> type range . VAR LPAREN RPAREN LBRACE statement-list RBRACE 
	funcdecl -> type range . VAR LPAREN argslist RPAREN LBRACE statement-list RBRACE 

	VAR					shift	14

State 11
	range -> LBRACE . NUM COMMA NUM RBRACE 

	NUM					shift	15

State 12
	funcdecl -> type VAR . LPAREN RPAREN LBRACE statement-list RBRACE 
	funcdecl -> type VAR . LPAREN argslist RPAREN LBRACE statement-list RBRACE 

	LPAREN					shift	16

State 13
	program -> funcdecl program . 

	EOF					reduce	3

State 14
	funcdecl -> type range VAR . LPAREN RPAREN LBRACE statement-list RBRACE 
	funcdecl -> type range VAR . LPAREN argslist RPAREN LBRACE statement-list RBRACE 

	LPAREN					shift	17

State 15
	range -> LBRACE NUM . COMMA NUM RBRACE 

	COMMA					shift	18

State 16
	funcdecl -> type VAR LPAREN . RPAREN LBRACE statement-list RBRACE 
	funcdecl -> type VAR LPAREN . argslist RPAREN LBRACE statement-list RBRACE 

	type					goto	19
	RPAREN					shift	22
	STRINGITERTYPE					shift	25
	NUMITERTYPE					shift	26
	NUMTYPE					shift	23
	STRINGTYPE					shift	24
	argslist					goto	21
	arg					goto	20

State 17
	funcdecl -> type range VAR LPAREN . RPAREN LBRACE statement-list RBRACE 
	funcdecl -> type range VAR LPAREN . argslist RPAREN LBRACE statement-list RBRACE 

	type					goto	19
	RPAREN					shift	28
	STRINGITERTYPE					shift	25
	NUMITERTYPE					shift	26
	NUMTYPE					shift	23
	STRINGTYPE					shift	24
	argslist					goto	27
	arg					goto	20

State 18
	range -> LBRACE NUM COMMA . NUM RBRACE 

	NUM					shift	29

State 19
	arg -> type . VAR 
	arg -> type . VAR range 

	VAR					shift	30

State 20
	argslist -> arg . 
	argslist -> arg . COMMA argslist 

	RPAREN					reduce	21
	COMMA					shift	31

State 21
	funcdecl -> type VAR LPAREN argslist . RPAREN LBRACE statement-list RBRACE 

	RPAREN					shift	32

State 22
	funcdecl -> type VAR LPAREN RPAREN . LBRACE statement-list RBRACE 

	LBRACE					shift	33

State 23
	type -> NUMTYPE . 
	arg -> NUMTYPE . range VAR 

	LBRACE					shift	11
	range					goto	34
	VAR					reduce	10

State 24
	type -> STRINGTYPE . 
	arg -> STRINGTYPE . range VAR 

	LBRACE					shift	11
	range					goto	35
	VAR					reduce	11

State 25
	type -> STRINGITERTYPE . 
	arg -> STRINGITERTYPE . range range VAR 

	LBRACE					shift	11
	range					goto	36
	VAR					reduce	12

State 26
	type -> NUMITERTYPE . 
	arg -> NUMITERTYPE . range range VAR 

	LBRACE					shift	11
	range					goto	37
	VAR					reduce	13

State 27
	funcdecl -> type range VAR LPAREN argslist . RPAREN LBRACE statement-list RBRACE 

	RPAREN					shift	38

State 28
	funcdecl -> type range VAR LPAREN RPAREN . LBRACE statement-list RBRACE 

	LBRACE					shift	39

State 29
	range -> LBRACE NUM COMMA NUM . RBRACE 

	RBRACE					shift	40

State 30
	arg -> type VAR . 
	arg -> type VAR . range 

	LBRACE					shift	11
	RPAREN					reduce	15
	COMMA					reduce	15
	range					goto	41

State 31
	argslist -> arg COMMA . argslist 

	type					goto	19
	STRINGITERTYPE					shift	25
	NUMITERTYPE					shift	26
	NUMTYPE					shift	23
	STRINGTYPE					shift	24
	argslist					goto	42
	arg					goto	20

State 32
	funcdecl -> type VAR LPAREN argslist RPAREN . LBRACE statement-list RBRACE 

	LBRACE					shift	43

State 33
	funcdecl -> type VAR LPAREN RPAREN LBRACE . statement-list RBRACE 

	if					goto	49
	NUMITERTYPE					shift	8
	decl					goto	47
	statement-list					goto	45
	type					goto	46
	STRINGITERTYPE					shift	7
	loop					goto	50
	return					goto	48
	RETURN					shift	53
	NUMTYPE					shift	5
	IF					shift	52
	STRINGTYPE					shift	6
	FOR					shift	51
	statement					goto	44

State 34
	arg -> NUMTYPE range . VAR 

	VAR					shift	54

State 35
	arg -> STRINGTYPE range . VAR 

	VAR					shift	55

State 36
	arg -> STRINGITERTYPE range . range VAR 

	LBRACE					shift	11
	range					goto	56

State 37
	arg -> NUMITERTYPE range . range VAR 

	LBRACE					shift	11
	range					goto	57

State 38
	funcdecl -> type range VAR LPAREN argslist RPAREN . LBRACE statement-list RBRACE 

	LBRACE					shift	58

State 39
	funcdecl -> type range VAR LPAREN RPAREN LBRACE . statement-list RBRACE 

	if					goto	49
	NUMITERTYPE					shift	8
	decl					goto	47
	statement-list					goto	59
	type					goto	46
	STRINGITERTYPE					shift	7
	loop					goto	50
	return					goto	48
	RETURN					shift	53
	NUMTYPE					shift	5
	IF					shift	52
	STRINGTYPE					shift	6
	FOR					shift	51
	statement					goto	44

State 40
	range -> LBRACE NUM COMMA NUM RBRACE . 

	LBRACE					reduce	14
	RPAREN					reduce	14
	COMMA					reduce	14
	VAR					reduce	14

State 41
	arg -> type VAR range . 

	RPAREN					reduce	16
	COMMA					reduce	16

State 42
	argslist -> arg COMMA argslist . 

	RPAREN					reduce	22

State 43
	funcdecl -> type VAR LPAREN argslist RPAREN LBRACE . statement-list RBRACE 

	if					goto	49
	NUMITERTYPE					shift	8
	decl					goto	47
	statement-list					goto	60
	type					goto	46
	STRINGITERTYPE					shift	7
	loop					goto	50
	return					goto	48
	RETURN					shift	53
	NUMTYPE					shift	5
	IF					shift	52
	STRINGTYPE					shift	6
	FOR					shift	51
	statement					goto	44

State 44
	statement-list -> statement . 
	statement-list -> statement . statement-list 

	RETURN					shift	53
	if					goto	49
	NUMITERTYPE					shift	8
	decl					goto	47
	statement-list					goto	61
	type					goto	46
	STRINGITERTYPE					shift	7
	loop					goto	50
	return					goto	48
	statement					goto	44
	NUMTYPE					shift	5
	IF					shift	52
	STRINGTYPE					shift	6
	FOR					shift	51
	RBRACE					reduce	8

State 45
	funcdecl -> type VAR LPAREN RPAREN LBRACE statement-list . RBRACE 

	RBRACE					shift	62

State 46
	decl -> type . VAR = expr 

	VAR					shift	63

State 47
	statement -> decl . SEMICOLON 

	SEMICOLON					shift	64

State 48
	statement -> return . SEMICOLON 

	SEMICOLON					shift	65

State 49
	statement -> if . 

	STR_LENGTH					reduce	6
	FOR					reduce	6
	IF					reduce	6
	NUM					reduce	6
	RETURN					reduce	6
	APPEND					reduce	6
	SPLIT					reduce	6
	EQUALS					reduce	6
	ITER_LENGTH					reduce	6
	VAR					reduce	6
	!					reduce	6
	STRINGITERTYPE					reduce	6
	STON					reduce	6
	NUMITERTYPE					reduce	6
	FIRST					reduce	6
	ITER_CONCAT					reduce	6
	NUMTYPE					reduce	6
	CONCAT					reduce	6
	STRINGTYPE					reduce	6
	STR					reduce	6
	NTOS					reduce	6
	RBRACE					reduce	6

State 50
	statement -> loop . 

	STR_LENGTH					reduce	7
	FOR					reduce	7
	IF					reduce	7
	NUM					reduce	7
	RETURN					reduce	7
	APPEND					reduce	7
	SPLIT					reduce	7
	EQUALS					reduce	7
	ITER_LENGTH					reduce	7
	VAR					reduce	7
	!					reduce	7
	STRINGITERTYPE					reduce	7
	STON					reduce	7
	NUMITERTYPE					reduce	7
	FIRST					reduce	7
	ITER_CONCAT					reduce	7
	NUMTYPE					reduce	7
	CONCAT					reduce	7
	STRINGTYPE					reduce	7
	STR					reduce	7
	NTOS					reduce	7
	RBRACE					reduce	7

State 51
	loop -> FOR . LPAREN iterator-body RPAREN LBRACE for-body RBRACE 
	loop -> FOR . LPAREN iterator-body PIPE iter-decl RPAREN LBRACE for-body RBRACE 

	LPAREN					shift	66

State 52
	if -> IF . LPAREN conditional RPAREN LBRACE statement-list RBRACE 
	if -> IF . LPAREN conditional RPAREN LBRACE statement-list RBRACE ELSE LBRACE statement-list RBRACE 

	LPAREN					shift	67

State 53
	return -> RETURN . expr 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	71
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 54
	arg -> NUMTYPE range VAR . 

	RPAREN					reduce	17
	COMMA					reduce	17

State 55
	arg -> STRINGTYPE range VAR . 

	RPAREN					reduce	19
	COMMA					reduce	19

State 56
	arg -> STRINGITERTYPE range range . VAR 

	VAR					shift	86

State 57
	arg -> NUMITERTYPE range range . VAR 

	VAR					shift	87

State 58
	funcdecl -> type range VAR LPAREN argslist RPAREN LBRACE . statement-list RBRACE 

	if					goto	49
	NUMITERTYPE					shift	8
	decl					goto	47
	statement-list					goto	88
	type					goto	46
	STRINGITERTYPE					shift	7
	loop					goto	50
	return					goto	48
	RETURN					shift	53
	NUMTYPE					shift	5
	IF					shift	52
	STRINGTYPE					shift	6
	FOR					shift	51
	statement					goto	44

State 59
	funcdecl -> type range VAR LPAREN RPAREN LBRACE statement-list . RBRACE 

	RBRACE					shift	89

State 60
	funcdecl -> type VAR LPAREN argslist RPAREN LBRACE statement-list . RBRACE 

	RBRACE					shift	90

State 61
	statement-list -> statement statement-list . 

	RBRACE					reduce	9

State 62
	funcdecl -> type VAR LPAREN RPAREN LBRACE statement-list RBRACE . 

	EOF					reduce	24
	NUMTYPE					reduce	24
	STRINGTYPE					reduce	24
	STRINGITERTYPE					reduce	24
	NUMITERTYPE					reduce	24

State 63
	decl -> type VAR . = expr 

	=					shift	91

State 64
	statement -> decl SEMICOLON . 

	STR_LENGTH					reduce	4
	FOR					reduce	4
	IF					reduce	4
	NUM					reduce	4
	RETURN					reduce	4
	APPEND					reduce	4
	SPLIT					reduce	4
	EQUALS					reduce	4
	ITER_LENGTH					reduce	4
	VAR					reduce	4
	!					reduce	4
	STRINGITERTYPE					reduce	4
	STON					reduce	4
	NUMITERTYPE					reduce	4
	FIRST					reduce	4
	ITER_CONCAT					reduce	4
	NUMTYPE					reduce	4
	CONCAT					reduce	4
	STRINGTYPE					reduce	4
	STR					reduce	4
	NTOS					reduce	4
	RBRACE					reduce	4

State 65
	statement -> return SEMICOLON . 

	STR_LENGTH					reduce	5
	FOR					reduce	5
	IF					reduce	5
	NUM					reduce	5
	RETURN					reduce	5
	APPEND					reduce	5
	SPLIT					reduce	5
	EQUALS					reduce	5
	ITER_LENGTH					reduce	5
	VAR					reduce	5
	!					reduce	5
	STRINGITERTYPE					reduce	5
	STON					reduce	5
	NUMITERTYPE					reduce	5
	FIRST					reduce	5
	ITER_CONCAT					reduce	5
	NUMTYPE					reduce	5
	CONCAT					reduce	5
	STRINGTYPE					reduce	5
	STR					reduce	5
	NTOS					reduce	5
	RBRACE					reduce	5

State 66
	loop -> FOR LPAREN . iterator-body RPAREN LBRACE for-body RBRACE 
	loop -> FOR LPAREN . iterator-body PIPE iter-decl RPAREN LBRACE for-body RBRACE 

	iterator-body					goto	92
	VAR					shift	93

State 67
	if -> IF LPAREN . conditional RPAREN LBRACE statement-list RBRACE 
	if -> IF LPAREN . conditional RPAREN LBRACE statement-list RBRACE ELSE LBRACE statement-list RBRACE 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	FIRST					shift	80
	EQUALS					shift	76
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	95
	unaryfn					goto	69
	compare					goto	96
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	conditional					goto	94
	STR					shift	85
	NTOS					shift	82

State 68
	expr -> binaryfn . LPAREN expr COMMA expr RPAREN 

	LPAREN					shift	97

State 69
	expr -> unaryfn . LPAREN expr RPAREN 

	LPAREN					shift	98

State 70
	expr -> userfn . 

	<=					reduce	63
	>=					reduce	63
	+					reduce	63
	OR					reduce	63
	RPAREN					reduce	63
	/					reduce	63
	-					reduce	63
	COMMA					reduce	63
	SEMICOLON					reduce	63
	*					reduce	63
	==					reduce	63
	AND					reduce	63
	>					reduce	63
	<					reduce	63

State 71
	return -> RETURN expr . 
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 

	AND					shift	103
	OR					shift	104
	SEMICOLON					reduce	28
	*					shift	102
	+					shift	99
	/					shift	101
	-					shift	100

State 72
	expr -> ! . expr 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	105
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 73
	binaryfn -> CONCAT . 

	LPAREN					reduce	43

State 74
	binaryfn -> APPEND . 

	LPAREN					reduce	44

State 75
	unaryfn -> STR_LENGTH . 

	LPAREN					reduce	48

State 76
	binaryfn -> EQUALS . 

	LPAREN					reduce	45

State 77
	binaryfn -> SPLIT . 

	LPAREN					reduce	47

State 78
	binaryfn -> ITER_CONCAT . 

	LPAREN					reduce	46

State 79
	unaryfn -> ITER_LENGTH . 

	LPAREN					reduce	50

State 80
	unaryfn -> FIRST . 

	LPAREN					reduce	49

State 81
	unaryfn -> STON . 

	LPAREN					reduce	51

State 82
	unaryfn -> NTOS . 

	LPAREN					reduce	52

State 83
	userfn -> VAR . LPAREN userfn-argslist RPAREN 
	expr -> VAR . 

	<=					reduce	66
	>=					reduce	66
	+					reduce	66
	OR					reduce	66
	RPAREN					reduce	66
	/					reduce	66
	-					reduce	66
	COMMA					reduce	66
	SEMICOLON					reduce	66
	*					reduce	66
	==					reduce	66
	AND					reduce	66
	LPAREN					shift	106
	>					reduce	66
	<					reduce	66

State 84
	expr -> NUM . 

	<=					reduce	67
	>=					reduce	67
	+					reduce	67
	OR					reduce	67
	RPAREN					reduce	67
	/					reduce	67
	-					reduce	67
	COMMA					reduce	67
	SEMICOLON					reduce	67
	*					reduce	67
	==					reduce	67
	AND					reduce	67
	>					reduce	67
	<					reduce	67

State 85
	expr -> STR . 

	<=					reduce	68
	>=					reduce	68
	+					reduce	68
	OR					reduce	68
	RPAREN					reduce	68
	/					reduce	68
	-					reduce	68
	COMMA					reduce	68
	SEMICOLON					reduce	68
	*					reduce	68
	==					reduce	68
	AND					reduce	68
	>					reduce	68
	<					reduce	68

State 86
	arg -> STRINGITERTYPE range range VAR . 

	RPAREN					reduce	20
	COMMA					reduce	20

State 87
	arg -> NUMITERTYPE range range VAR . 

	RPAREN					reduce	18
	COMMA					reduce	18

State 88
	funcdecl -> type range VAR LPAREN argslist RPAREN LBRACE statement-list . RBRACE 

	RBRACE					shift	107

State 89
	funcdecl -> type range VAR LPAREN RPAREN LBRACE statement-list RBRACE . 

	EOF					reduce	23
	NUMTYPE					reduce	23
	STRINGTYPE					reduce	23
	STRINGITERTYPE					reduce	23
	NUMITERTYPE					reduce	23

State 90
	funcdecl -> type VAR LPAREN argslist RPAREN LBRACE statement-list RBRACE . 

	EOF					reduce	26
	NUMTYPE					reduce	26
	STRINGTYPE					reduce	26
	STRINGITERTYPE					reduce	26
	NUMITERTYPE					reduce	26

State 91
	decl -> type VAR = . expr 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	108
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 92
	loop -> FOR LPAREN iterator-body . RPAREN LBRACE for-body RBRACE 
	loop -> FOR LPAREN iterator-body . PIPE iter-decl RPAREN LBRACE for-body RBRACE 

	RPAREN					shift	109
	PIPE					shift	110

State 93
	iterator-body -> VAR . COLON iterator 
	iterator-body -> VAR . COLON iterator COMMA VAR COLON iterator 

	COLON					shift	111

State 94
	if -> IF LPAREN conditional . RPAREN LBRACE statement-list RBRACE 
	if -> IF LPAREN conditional . RPAREN LBRACE statement-list RBRACE ELSE LBRACE statement-list RBRACE 

	RPAREN					shift	112

State 95
	conditional -> expr . 
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 
	compare -> expr . < expr 
	compare -> expr . > expr 
	compare -> expr . <= expr 
	compare -> expr . >= expr 
	compare -> expr . == expr 

	-					shift	100
	AND					shift	103
	>=					shift	114
	+					shift	99
	*					shift	102
	==					shift	117
	RPAREN					reduce	30
	/					shift	101
	<=					shift	116
	OR					shift	104
	>					shift	113
	<					shift	115

State 96
	conditional -> compare . 

	RPAREN					reduce	29

State 97
	expr -> binaryfn LPAREN . expr COMMA expr RPAREN 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	118
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 98
	expr -> unaryfn LPAREN . expr RPAREN 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	119
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 99
	expr -> expr + . expr 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	120
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 100
	expr -> expr - . expr 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	121
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 101
	expr -> expr / . expr 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	122
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 102
	expr -> expr * . expr 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	123
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 103
	expr -> expr AND . expr 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	124
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 104
	expr -> expr OR . expr 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	125
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 105
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 
	expr -> ! expr . 

	<=					reduce	62
	>=					reduce	62
	+					reduce	62
	OR					reduce	62
	RPAREN					reduce	62
	/					reduce	62
	-					reduce	62
	COMMA					reduce	62
	SEMICOLON					reduce	62
	*					reduce	62
	==					reduce	62
	AND					reduce	62
	>					reduce	62
	<					reduce	62

State 106
	userfn -> VAR LPAREN . userfn-argslist RPAREN 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	userfn-argslist					goto	126
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	127
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 107
	funcdecl -> type range VAR LPAREN argslist RPAREN LBRACE statement-list RBRACE . 

	EOF					reduce	25
	NUMTYPE					reduce	25
	STRINGTYPE					reduce	25
	STRINGITERTYPE					reduce	25
	NUMITERTYPE					reduce	25

State 108
	decl -> type VAR = expr . 
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 

	AND					shift	103
	OR					shift	104
	SEMICOLON					reduce	27
	*					shift	102
	+					shift	99
	RPAREN					reduce	27
	/					shift	101
	-					shift	100

State 109
	loop -> FOR LPAREN iterator-body RPAREN . LBRACE for-body RBRACE 

	LBRACE					shift	128

State 110
	loop -> FOR LPAREN iterator-body PIPE . iter-decl RPAREN LBRACE for-body RBRACE 

	type					goto	129
	STRINGITERTYPE					shift	7
	NUMITERTYPE					shift	8
	decl					goto	130
	NUMTYPE					shift	5
	STRINGTYPE					shift	6
	iter-decl					goto	131

State 111
	iterator-body -> VAR COLON . iterator 
	iterator-body -> VAR COLON . iterator COMMA VAR COLON iterator 

	iterator					goto	132
	NUM					shift	134
	VAR					shift	133

State 112
	if -> IF LPAREN conditional RPAREN . LBRACE statement-list RBRACE 
	if -> IF LPAREN conditional RPAREN . LBRACE statement-list RBRACE ELSE LBRACE statement-list RBRACE 

	LBRACE					shift	135

State 113
	compare -> expr > . expr 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	136
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 114
	compare -> expr >= . expr 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	137
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 115
	compare -> expr < . expr 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	138
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 116
	compare -> expr <= . expr 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	139
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 117
	compare -> expr == . expr 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	140
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 118
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 
	expr -> binaryfn LPAREN expr . COMMA expr RPAREN 

	AND					shift	103
	OR					shift	104
	+					shift	99
	*					shift	102
	/					shift	101
	COMMA					shift	141
	-					shift	100

State 119
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 
	expr -> unaryfn LPAREN expr . RPAREN 

	AND					shift	103
	OR					shift	104
	+					shift	99
	*					shift	102
	RPAREN					shift	142
	/					shift	101
	-					shift	100

State 120
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr + expr . 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 

	<=					reduce	58
	>=					reduce	58
	+					reduce	58
	OR					reduce	58
	RPAREN					reduce	58
	/					shift	101
	-					reduce	58
	COMMA					reduce	58
	SEMICOLON					reduce	58
	*					shift	102
	==					reduce	58
	AND					reduce	58
	>					reduce	58
	<					reduce	58

State 121
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr - expr . 
	expr -> expr . * expr 
	expr -> expr . / expr 

	<=					reduce	59
	>=					reduce	59
	+					reduce	59
	OR					reduce	59
	RPAREN					reduce	59
	/					shift	101
	-					reduce	59
	COMMA					reduce	59
	SEMICOLON					reduce	59
	*					shift	102
	==					reduce	59
	AND					reduce	59
	>					reduce	59
	<					reduce	59

State 122
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 
	expr -> expr / expr . 

	<=					reduce	61
	>=					reduce	61
	+					reduce	61
	OR					reduce	61
	RPAREN					reduce	61
	/					reduce	61
	-					reduce	61
	COMMA					reduce	61
	SEMICOLON					reduce	61
	*					reduce	61
	==					reduce	61
	AND					reduce	61
	>					reduce	61
	<					reduce	61

State 123
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr * expr . 
	expr -> expr . / expr 

	<=					reduce	60
	>=					reduce	60
	+					reduce	60
	OR					reduce	60
	RPAREN					reduce	60
	/					reduce	60
	-					reduce	60
	COMMA					reduce	60
	SEMICOLON					reduce	60
	*					reduce	60
	==					reduce	60
	AND					reduce	60
	>					reduce	60
	<					reduce	60

State 124
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr AND expr . 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 

	<=					reduce	57
	>=					reduce	57
	+					shift	99
	OR					reduce	57
	RPAREN					reduce	57
	/					shift	101
	-					shift	100
	COMMA					reduce	57
	SEMICOLON					reduce	57
	*					shift	102
	==					reduce	57
	AND					reduce	57
	>					reduce	57
	<					reduce	57

State 125
	expr -> expr . OR expr 
	expr -> expr OR expr . 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 

	<=					reduce	56
	>=					reduce	56
	+					shift	99
	OR					reduce	56
	RPAREN					reduce	56
	/					shift	101
	-					shift	100
	COMMA					reduce	56
	SEMICOLON					reduce	56
	*					shift	102
	==					reduce	56
	AND					shift	103
	>					reduce	56
	<					reduce	56

State 126
	userfn -> VAR LPAREN userfn-argslist . RPAREN 

	RPAREN					shift	143

State 127
	userfn-argslist -> expr . 
	userfn-argslist -> expr . COMMA userfn-argslist 
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 

	AND					shift	103
	OR					shift	104
	+					shift	99
	*					shift	102
	RPAREN					reduce	53
	/					shift	101
	COMMA					shift	144
	-					shift	100

State 128
	loop -> FOR LPAREN iterator-body RPAREN LBRACE . for-body RBRACE 

	statement					goto	145
	STON					shift	81
	SPLIT					shift	77
	CONCAT					shift	73
	VAR					shift	83
	ITER_LENGTH					shift	79
	ITER_CONCAT					shift	78
	for-body					goto	146
	binaryfn					goto	68
	type					goto	46
	NTOS					shift	82
	expr					goto	147
	loop					goto	50
	EQUALS					shift	76
	RETURN					shift	53
	IF					shift	52
	STRINGTYPE					shift	6
	FOR					shift	51
	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	decl					goto	47
	if					goto	49
	FIRST					shift	80
	!					shift	72
	STRINGITERTYPE					shift	7
	return					goto	48
	NUMITERTYPE					shift	8
	NUMTYPE					shift	5
	STR					shift	85
	unaryfn					goto	69

State 129
	decl -> type . VAR = expr 
	iter-decl -> type . VAR 

	VAR					shift	148

State 130
	iter-decl -> decl . 

	RPAREN					reduce	37

State 131
	loop -> FOR LPAREN iterator-body PIPE iter-decl . RPAREN LBRACE for-body RBRACE 

	RPAREN					shift	149

State 132
	iterator-body -> VAR COLON iterator . 
	iterator-body -> VAR COLON iterator . COMMA VAR COLON iterator 

	RPAREN					reduce	35
	PIPE					reduce	35
	COMMA					shift	150

State 133
	iterator -> VAR . 

	RPAREN					reduce	33
	PIPE					reduce	33
	COMMA					reduce	33

State 134
	iterator -> NUM . 

	RPAREN					reduce	34
	PIPE					reduce	34
	COMMA					reduce	34

State 135
	if -> IF LPAREN conditional RPAREN LBRACE . statement-list RBRACE 
	if -> IF LPAREN conditional RPAREN LBRACE . statement-list RBRACE ELSE LBRACE statement-list RBRACE 

	if					goto	49
	NUMITERTYPE					shift	8
	decl					goto	47
	statement-list					goto	151
	type					goto	46
	STRINGITERTYPE					shift	7
	loop					goto	50
	return					goto	48
	RETURN					shift	53
	NUMTYPE					shift	5
	IF					shift	52
	STRINGTYPE					shift	6
	FOR					shift	51
	statement					goto	44

State 136
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 
	compare -> expr > expr . 

	AND					shift	103
	OR					shift	104
	+					shift	99
	*					shift	102
	RPAREN					reduce	70
	/					shift	101
	-					shift	100

State 137
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 
	compare -> expr >= expr . 

	AND					shift	103
	OR					shift	104
	+					shift	99
	*					shift	102
	RPAREN					reduce	72
	/					shift	101
	-					shift	100

State 138
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 
	compare -> expr < expr . 

	AND					shift	103
	OR					shift	104
	+					shift	99
	*					shift	102
	RPAREN					reduce	69
	/					shift	101
	-					shift	100

State 139
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 
	compare -> expr <= expr . 

	AND					shift	103
	OR					shift	104
	+					shift	99
	*					shift	102
	RPAREN					reduce	71
	/					shift	101
	-					shift	100

State 140
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 
	compare -> expr == expr . 

	AND					shift	103
	OR					shift	104
	+					shift	99
	*					shift	102
	RPAREN					reduce	73
	/					shift	101
	-					shift	100

State 141
	expr -> binaryfn LPAREN expr COMMA . expr RPAREN 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	152
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 142
	expr -> unaryfn LPAREN expr RPAREN . 

	<=					reduce	64
	>=					reduce	64
	+					reduce	64
	OR					reduce	64
	RPAREN					reduce	64
	/					reduce	64
	-					reduce	64
	COMMA					reduce	64
	SEMICOLON					reduce	64
	*					reduce	64
	==					reduce	64
	AND					reduce	64
	>					reduce	64
	<					reduce	64

State 143
	userfn -> VAR LPAREN userfn-argslist RPAREN . 

	<=					reduce	55
	>=					reduce	55
	+					reduce	55
	OR					reduce	55
	RPAREN					reduce	55
	/					reduce	55
	-					reduce	55
	COMMA					reduce	55
	SEMICOLON					reduce	55
	*					reduce	55
	==					reduce	55
	AND					reduce	55
	>					reduce	55
	<					reduce	55

State 144
	userfn-argslist -> expr COMMA . userfn-argslist 

	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	binaryfn					goto	68
	SPLIT					shift	77
	userfn-argslist					goto	153
	ITER_LENGTH					shift	79
	VAR					shift	83
	!					shift	72
	expr					goto	127
	unaryfn					goto	69
	EQUALS					shift	76
	ITER_CONCAT					shift	78
	STON					shift	81
	CONCAT					shift	73
	FIRST					shift	80
	STR					shift	85
	NTOS					shift	82

State 145
	for-body -> statement . for-body 

	statement					goto	145
	STON					shift	81
	SPLIT					shift	77
	CONCAT					shift	73
	VAR					shift	83
	ITER_LENGTH					shift	79
	ITER_CONCAT					shift	78
	for-body					goto	154
	binaryfn					goto	68
	type					goto	46
	NTOS					shift	82
	expr					goto	147
	loop					goto	50
	EQUALS					shift	76
	RETURN					shift	53
	IF					shift	52
	STRINGTYPE					shift	6
	FOR					shift	51
	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	decl					goto	47
	if					goto	49
	FIRST					shift	80
	!					shift	72
	STRINGITERTYPE					shift	7
	return					goto	48
	NUMITERTYPE					shift	8
	NUMTYPE					shift	5
	STR					shift	85
	unaryfn					goto	69

State 146
	loop -> FOR LPAREN iterator-body RPAREN LBRACE for-body . RBRACE 

	RBRACE					shift	155

State 147
	for-body -> expr . SEMICOLON 
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 

	AND					shift	103
	OR					shift	104
	+					shift	99
	*					shift	102
	/					shift	101
	SEMICOLON					shift	156
	-					shift	100

State 148
	decl -> type VAR . = expr 
	iter-decl -> type VAR . 

	RPAREN					reduce	38
	=					shift	91

State 149
	loop -> FOR LPAREN iterator-body PIPE iter-decl RPAREN . LBRACE for-body RBRACE 

	LBRACE					shift	157

State 150
	iterator-body -> VAR COLON iterator COMMA . VAR COLON iterator 

	VAR					shift	158

State 151
	if -> IF LPAREN conditional RPAREN LBRACE statement-list . RBRACE 
	if -> IF LPAREN conditional RPAREN LBRACE statement-list . RBRACE ELSE LBRACE statement-list RBRACE 

	RBRACE					shift	159

State 152
	expr -> expr . OR expr 
	expr -> expr . AND expr 
	expr -> expr . + expr 
	expr -> expr . - expr 
	expr -> expr . * expr 
	expr -> expr . / expr 
	expr -> binaryfn LPAREN expr COMMA expr . RPAREN 

	AND					shift	103
	OR					shift	104
	+					shift	99
	*					shift	102
	RPAREN					shift	160
	/					shift	101
	-					shift	100

State 153
	userfn-argslist -> expr COMMA userfn-argslist . 

	RPAREN					reduce	54

State 154
	for-body -> statement for-body . 

	RBRACE					reduce	40

State 155
	loop -> FOR LPAREN iterator-body RPAREN LBRACE for-body RBRACE . 

	STR_LENGTH					reduce	41
	FOR					reduce	41
	IF					reduce	41
	NUM					reduce	41
	RETURN					reduce	41
	APPEND					reduce	41
	SPLIT					reduce	41
	EQUALS					reduce	41
	ITER_LENGTH					reduce	41
	VAR					reduce	41
	!					reduce	41
	STRINGITERTYPE					reduce	41
	STON					reduce	41
	NUMITERTYPE					reduce	41
	FIRST					reduce	41
	ITER_CONCAT					reduce	41
	NUMTYPE					reduce	41
	CONCAT					reduce	41
	STRINGTYPE					reduce	41
	STR					reduce	41
	NTOS					reduce	41
	RBRACE					reduce	41

State 156
	for-body -> expr SEMICOLON . 

	RBRACE					reduce	39

State 157
	loop -> FOR LPAREN iterator-body PIPE iter-decl RPAREN LBRACE . for-body RBRACE 

	statement					goto	145
	STON					shift	81
	SPLIT					shift	77
	CONCAT					shift	73
	VAR					shift	83
	ITER_LENGTH					shift	79
	ITER_CONCAT					shift	78
	for-body					goto	161
	binaryfn					goto	68
	type					goto	46
	NTOS					shift	82
	expr					goto	147
	loop					goto	50
	EQUALS					shift	76
	RETURN					shift	53
	IF					shift	52
	STRINGTYPE					shift	6
	FOR					shift	51
	STR_LENGTH					shift	75
	NUM					shift	84
	userfn					goto	70
	APPEND					shift	74
	decl					goto	47
	if					goto	49
	FIRST					shift	80
	!					shift	72
	STRINGITERTYPE					shift	7
	return					goto	48
	NUMITERTYPE					shift	8
	NUMTYPE					shift	5
	STR					shift	85
	unaryfn					goto	69

State 158
	iterator-body -> VAR COLON iterator COMMA VAR . COLON iterator 

	COLON					shift	162

State 159
	if -> IF LPAREN conditional RPAREN LBRACE statement-list RBRACE . 
	if -> IF LPAREN conditional RPAREN LBRACE statement-list RBRACE . ELSE LBRACE statement-list RBRACE 

	STR_LENGTH					reduce	31
	FOR					reduce	31
	IF					reduce	31
	NUM					reduce	31
	RETURN					reduce	31
	APPEND					reduce	31
	SPLIT					reduce	31
	EQUALS					reduce	31
	ITER_LENGTH					reduce	31
	VAR					reduce	31
	!					reduce	31
	STRINGITERTYPE					reduce	31
	STON					reduce	31
	NUMITERTYPE					reduce	31
	FIRST					reduce	31
	ITER_CONCAT					reduce	31
	NUMTYPE					reduce	31
	CONCAT					reduce	31
	ELSE					shift	163
	STRINGTYPE					reduce	31
	STR					reduce	31
	NTOS					reduce	31
	RBRACE					reduce	31

State 160
	expr -> binaryfn LPAREN expr COMMA expr RPAREN . 

	<=					reduce	65
	>=					reduce	65
	+					reduce	65
	OR					reduce	65
	RPAREN					reduce	65
	/					reduce	65
	-					reduce	65
	COMMA					reduce	65
	SEMICOLON					reduce	65
	*					reduce	65
	==					reduce	65
	AND					reduce	65
	>					reduce	65
	<					reduce	65

State 161
	loop -> FOR LPAREN iterator-body PIPE iter-decl RPAREN LBRACE for-body . RBRACE 

	RBRACE					shift	164

State 162
	iterator-body -> VAR COLON iterator COMMA VAR COLON . iterator 

	iterator					goto	165
	NUM					shift	134
	VAR					shift	133

State 163
	if -> IF LPAREN conditional RPAREN LBRACE statement-list RBRACE ELSE . LBRACE statement-list RBRACE 

	LBRACE					shift	166

State 164
	loop -> FOR LPAREN iterator-body PIPE iter-decl RPAREN LBRACE for-body RBRACE . 

	STR_LENGTH					reduce	42
	FOR					reduce	42
	IF					reduce	42
	NUM					reduce	42
	RETURN					reduce	42
	APPEND					reduce	42
	SPLIT					reduce	42
	EQUALS					reduce	42
	ITER_LENGTH					reduce	42
	VAR					reduce	42
	!					reduce	42
	STRINGITERTYPE					reduce	42
	STON					reduce	42
	NUMITERTYPE					reduce	42
	FIRST					reduce	42
	ITER_CONCAT					reduce	42
	NUMTYPE					reduce	42
	CONCAT					reduce	42
	STRINGTYPE					reduce	42
	STR					reduce	42
	NTOS					reduce	42
	RBRACE					reduce	42

State 165
	iterator-body -> VAR COLON iterator COMMA VAR COLON iterator . 

	RPAREN					reduce	36
	PIPE					reduce	36

State 166
	if -> IF LPAREN conditional RPAREN LBRACE statement-list RBRACE ELSE LBRACE . statement-list RBRACE 

	if					goto	49
	NUMITERTYPE					shift	8
	decl					goto	47
	statement-list					goto	167
	type					goto	46
	STRINGITERTYPE					shift	7
	loop					goto	50
	return					goto	48
	RETURN					shift	53
	NUMTYPE					shift	5
	IF					shift	52
	STRINGTYPE					shift	6
	FOR					shift	51
	statement					goto	44

State 167
	if -> IF LPAREN conditional RPAREN LBRACE statement-list RBRACE ELSE LBRACE statement-list . RBRACE 

	RBRACE					shift	168

State 168
	if -> IF LPAREN conditional RPAREN LBRACE statement-list RBRACE ELSE LBRACE statement-list RBRACE . 

	STR_LENGTH					reduce	32
	FOR					reduce	32
	IF					reduce	32
	NUM					reduce	32
	RETURN					reduce	32
	APPEND					reduce	32
	SPLIT					reduce	32
	EQUALS					reduce	32
	ITER_LENGTH					reduce	32
	VAR					reduce	32
	!					reduce	32
	STRINGITERTYPE					reduce	32
	STON					reduce	32
	NUMITERTYPE					reduce	32
	FIRST					reduce	32
	ITER_CONCAT					reduce	32
	NUMTYPE					reduce	32
	CONCAT					reduce	32
	STRINGTYPE					reduce	32
	STR					reduce	32
	NTOS					reduce	32
	RBRACE					reduce	32

