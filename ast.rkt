#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 60 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 1507 0 29 3 12 #"#lang racket"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 7 #"provide"
0 0 25 3 2 #" ("
0 0 14 3 15 #"all-defined-out"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 2 #" ("
0 0 14 3 10 #"for-syntax"
0 0 25 3 1 #" "
0 0 14 3 13 #"racket/syntax"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 14 3 19 #"syntax/parse/define"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 14 3 14 #"racket/generic"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 15 #"define-generics"
0 0 25 3 1 #" "
0 0 14 3 14 #"printable-node"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"node-print"
0 0 25 3 1 #" "
0 0 14 3 14 #"printable-node"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 8 #";; Terms"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"Term"
0 0 25 3 4 #" () "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 5 #"Const"
0 0 25 3 1 #" "
0 0 14 3 4 #"Term"
0 0 25 3 2 #" ("
0 0 14 3 3 #"val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 13 #"#:transparent"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 9 #"#:methods"
0 0 25 3 1 #" "
0 0 14 3 18 #"gen:printable-node"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"  [("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"node-print"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"~a\""
0 0 25 3 2 #" ("
0 0 14 3 5 #"Const"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 5 #")))])"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 3 #"Var"
0 0 25 3 1 #" "
0 0 14 3 4 #"Term"
0 0 25 3 2 #" ("
0 0 14 3 4 #"name"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 13 #"#:transparent"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 9 #"#:methods"
0 0 25 3 1 #" "
0 0 14 3 18 #"gen:printable-node"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"  [("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"node-print"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"~a\""
0 0 25 3 2 #" ("
0 0 14 3 8 #"Var-name"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 5 #")))])"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 8 #";; Types"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 7 #"IntType"
0 0 25 3 2 #" ("
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 14 3 6 #"signed"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 13 #"#:transparent"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 9 #"#:methods"
0 0 25 3 1 #" "
0 0 14 3 18 #"gen:printable-node"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"  [("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"node-print"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 8 #"sign-str"
0 0 25 3 2 #" ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 14 #"IntType-signed"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"u\""
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"~aint~a_t\""
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 14 3 8 #"sign-str"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 13 #"IntType-width"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 6 #"))))])"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 9 #"ArrayType"
0 0 25 3 2 #" ("
0 0 14 3 7 #"subtype"
0 0 25 3 2 #") "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 7 #"NumType"
0 0 25 3 4 #" () "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 10 #"StringType"
0 0 25 3 4 #" () "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"struct"
0 0 17 3 1 #" "
0 0 17 3 4 #"Type"
0 0 17 3 1 #" "
0 0 17 3 4 #"Term"
0 0 17 3 2 #" ("
0 0 17 3 4 #"val)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"  #:transparent"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #"  "
0 0 17 3 9 #"#:methods"
0 0 17 3 19 #" gen:printable-node"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"  [("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 10 #"node-print"
0 0 17 3 1 #" "
0 0 17 3 5 #"node)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 6 #"     ("
0 0 17 3 6 #"format"
0 0 17 3 1 #" "
0 0 17 3 3 #"\"~a"
0 0 17 3 1 #"\""
0 0 17 3 2 #" ("
0 0 17 3 8 #"Type-val"
0 0 17 3 1 #" "
0 0 17 3 9 #"node)))])"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"Type"
0 0 25 3 1 #" "
0 0 14 3 8 #"type-str"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 25 3 1 #" "
0 0 14 3 8 #"type-str"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 19 3 5 #"\"num\""
0 0 25 3 2 #" ("
0 0 14 3 7 #"NumType"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 19 3 8 #"\"string\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"StringType"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 7 #"pregexp"
0 0 25 3 1 #" "
0 0 19 3 24 #"#px\"(u?)int(\\\\d{1,2})_t\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 4 #"sign"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 7 #"IntType"
0 0 25 3 2 #" ("
0 0 14 3 14 #"string->number"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 2 #") "
0 0 14 3 4 #"sign"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 7 #"pregexp"
0 0 25 3 1 #" "
0 0 19 3 3 #"#px"
0 0 19 3 32 #"\"(string|int|num)\\\\s*\\\\[\\\\s*\\\\]\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 7 #"subtype"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"ArrayType"
0 0 25 3 1 #" "
0 0 14 3 7 #"subtype"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 3 51 #"                                                   "
0 0 25 29 1 #"\n"
0 0 17 3 13 #";; Statements"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 9 #"Statement"
0 0 25 3 4 #" () "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"Decl"
0 0 25 3 1 #" "
0 0 14 3 9 #"Statement"
0 0 25 3 2 #" ("
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 3 #"var"
0 0 25 3 1 #" "
0 0 14 3 4 #"expr"
0 0 25 3 2 #") "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"Assn"
0 0 25 3 1 #" "
0 0 14 3 9 #"Statement"
0 0 25 3 2 #" ("
0 0 14 3 3 #"var"
0 0 25 3 1 #" "
0 0 14 3 4 #"expr"
0 0 25 3 2 #") "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 6 #"Return"
0 0 25 3 1 #" "
0 0 14 3 9 #"Statement"
0 0 25 3 2 #" ("
0 0 14 3 4 #"expr"
0 0 25 3 2 #") "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 2 #"If"
0 0 25 3 1 #" "
0 0 14 3 9 #"Statement"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cnd"
0 0 25 3 1 #" "
0 0 14 3 4 #"then"
0 0 25 3 1 #" "
0 0 14 3 4 #"else"
0 0 25 3 2 #") "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 3 #"For"
0 0 25 3 1 #" "
0 0 14 3 9 #"Statement"
0 0 25 3 2 #" ("
0 0 14 3 3 #"idx"
0 0 25 3 1 #" "
0 0 14 3 4 #"iter"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 2 #") "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 18 #"; Function related"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 7 #"FuncDec"
0 0 25 3 1 #" "
0 0 14 3 9 #"Statement"
0 0 25 3 2 #" ("
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 2 #") "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"func-last-statement"
0 0 25 3 1 #" "
0 0 14 3 4 #"func"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"bd"
0 0 25 3 2 #" ("
0 0 14 3 12 #"FuncDec-body"
0 0 25 3 1 #" "
0 0 14 3 4 #"func"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 2 #"bd"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 22 3 2 #"#f"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"last"
0 0 25 3 1 #" "
0 0 14 3 2 #"bd"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 3 #"Arg"
0 0 25 3 2 #" ("
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 14 3 5 #"range"
0 0 25 3 2 #") "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 5 #"Range"
0 0 25 3 2 #" ("
0 0 14 3 3 #"low"
0 0 25 3 1 #" "
0 0 14 3 4 #"high"
0 0 25 3 2 #") "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 13 #"; Expressions"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 19 #"define-simple-macro"
0 0 25 3 2 #" ("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 7 #"name:id"
0 0 25 3 1 #" "
0 0 14 3 14 #"fmt-str:string"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 6 #"#:with"
0 0 25 3 1 #" "
0 0 14 3 9 #"node-name"
0 0 25 3 2 #" ("
0 0 14 3 9 #"format-id"
0 0 25 3 1 #" "
0 0 22 3 2 #"#'"
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"~a"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 22 3 2 #"#'"
0 0 14 3 4 #"name"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 6 #"#:with"
0 0 25 3 1 #" "
0 0 14 3 6 #"expr-l"
0 0 25 3 2 #" ("
0 0 14 3 9 #"format-id"
0 0 25 3 1 #" "
0 0 22 3 2 #"#'"
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"~a-l"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 22 3 2 #"#'"
0 0 14 3 4 #"name"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 6 #"#:with"
0 0 25 3 1 #" "
0 0 14 3 6 #"expr-r"
0 0 25 3 2 #" ("
0 0 14 3 9 #"format-id"
0 0 25 3 1 #" "
0 0 22 3 2 #"#'"
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"~a-r"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 22 3 2 #"#'"
0 0 14 3 4 #"name"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 9 #"node-name"
0 0 25 3 1 #" "
0 0 14 3 5 #"BinOp"
0 0 25 3 2 #" ("
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 24 3 13 #"#:transparent"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 24 3 9 #"#:methods"
0 0 25 3 1 #" "
0 0 14 3 18 #"gen:printable-node"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 15 3 14 #"define/generic"
0 0 25 3 1 #" "
0 0 14 3 11 #"super-print"
0 0 25 3 1 #" "
0 0 14 3 10 #"node-print"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"node-print"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 14 3 7 #"fmt-str"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 11 #"super-print"
0 0 25 3 2 #" ("
0 0 14 3 6 #"expr-l"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 11 #"super-print"
0 0 25 3 2 #" ("
0 0 14 3 6 #"expr-r"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 7 #"))))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 19 #"define-simple-macro"
0 0 25 3 2 #" ("
0 0 15 3 11 #"define-unop"
0 0 25 3 1 #" "
0 0 14 3 7 #"name:id"
0 0 25 3 1 #" "
0 0 14 3 14 #"fmt-str:string"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 6 #"#:with"
0 0 25 3 1 #" "
0 0 14 3 9 #"node-name"
0 0 25 3 2 #" ("
0 0 14 3 9 #"format-id"
0 0 25 3 1 #" "
0 0 22 3 2 #"#'"
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"~a"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 22 3 2 #"#'"
0 0 14 3 4 #"name"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 6 #"#:with"
0 0 25 3 1 #" "
0 0 14 3 8 #"expr-val"
0 0 25 3 2 #" ("
0 0 14 3 9 #"format-id"
0 0 25 3 1 #" "
0 0 22 3 2 #"#'"
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"~a-val"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 22 3 2 #"#'"
0 0 14 3 4 #"name"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 9 #"node-name"
0 0 25 3 1 #" "
0 0 14 3 4 #"UnOp"
0 0 25 3 2 #" ("
0 0 14 3 3 #"val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 24 3 13 #"#:transparent"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 24 3 9 #"#:methods"
0 0 25 3 1 #" "
0 0 14 3 18 #"gen:printable-node"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 15 3 14 #"define/generic"
0 0 25 3 1 #" "
0 0 14 3 11 #"super-print"
0 0 25 3 1 #" "
0 0 14 3 10 #"node-print"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"node-print"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 14 3 7 #"fmt-str"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 11 #"super-print"
0 0 25 3 2 #" ("
0 0 14 3 8 #"expr-val"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 7 #"))))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"Expr"
0 0 25 3 4 #" () "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 5 #"BinOp"
0 0 25 3 1 #" "
0 0 14 3 4 #"Expr"
0 0 25 3 4 #" () "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"UnOp"
0 0 25 3 1 #" "
0 0 14 3 4 #"Expr"
0 0 25 3 4 #" () "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 9 #"StrSubstr"
0 0 25 3 1 #" "
0 0 14 3 4 #"Expr"
0 0 25 3 2 #" ("
0 0 14 3 3 #"str"
0 0 25 3 1 #" "
0 0 14 3 4 #"from"
0 0 25 3 1 #" "
0 0 14 3 2 #"to"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 13 #"#:transparent"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 9 #"#:methods"
0 0 25 3 1 #" "
0 0 14 3 18 #"gen:printable-node"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"  [("
0 0 15 3 14 #"define/generic"
0 0 25 3 1 #" "
0 0 14 3 11 #"super-print"
0 0 25 3 1 #" "
0 0 14 3 10 #"node-print"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"node-print"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 10 #"str-substr"
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 10 #"node-print"
0 0 25 3 2 #" ("
0 0 14 3 13 #"StrSubstr-str"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 10 #"node-print"
0 0 25 3 2 #" ("
0 0 14 3 14 #"StrSubstr-from"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 10 #"node-print"
0 0 25 3 2 #" ("
0 0 14 3 12 #"StrSubstr-to"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 6 #"))))])"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 11 #"StrCaseCmpN"
0 0 25 3 1 #" "
0 0 14 3 4 #"Expr"
0 0 25 3 2 #" ("
0 0 14 3 2 #"s1"
0 0 25 3 1 #" "
0 0 14 3 2 #"s2"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 13 #"#:transparent"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 9 #"#:methods"
0 0 25 3 1 #" "
0 0 14 3 18 #"gen:printable-node"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"  [("
0 0 15 3 14 #"define/generic"
0 0 25 3 1 #" "
0 0 14 3 11 #"super-print"
0 0 25 3 1 #" "
0 0 14 3 10 #"node-print"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"node-print"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 15 #"str-case-cmp-n?"
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 10 #"node-print"
0 0 25 3 2 #" ("
0 0 14 3 14 #"StrCaseCmpN-s1"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 10 #"node-print"
0 0 25 3 2 #" ("
0 0 14 3 14 #"StrCaseCmpN-s2"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 10 #"node-print"
0 0 25 3 2 #" ("
0 0 14 3 13 #"StrCaseCmpN-n"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 6 #"))))])"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 9 #"ArrSubstr"
0 0 25 3 1 #" "
0 0 14 3 4 #"Expr"
0 0 25 3 2 #" ("
0 0 14 3 3 #"arr"
0 0 25 3 1 #" "
0 0 14 3 4 #"from"
0 0 25 3 1 #" "
0 0 14 3 2 #"to"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 13 #"#:transparent"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 24 3 9 #"#:methods"
0 0 25 3 1 #" "
0 0 14 3 18 #"gen:printable-node"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"  [("
0 0 15 3 14 #"define/generic"
0 0 25 3 1 #" "
0 0 14 3 11 #"super-print"
0 0 25 3 1 #" "
0 0 14 3 10 #"node-print"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"node-print"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 10 #"arr-subarr"
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 10 #"node-print"
0 0 25 3 2 #" ("
0 0 14 3 13 #"ArrSubstr-arr"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 10 #"node-print"
0 0 25 3 2 #" ("
0 0 14 3 14 #"ArrSubstr-from"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 10 #"node-print"
0 0 25 3 2 #" ("
0 0 14 3 12 #"ArrSubstr-to"
0 0 25 3 1 #" "
0 0 14 3 4 #"node"
0 0 25 3 6 #"))))])"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 3 #"Add"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 1 #"+"
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 4 #"Mult"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 1 #"*"
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 5 #"Minus"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 1 #"-"
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 3 #"Div"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 1 #"/"
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 2 #"Lt"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 1 #"<"
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 2 #"Gt"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 1 #">"
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 3 #"Lte"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 2 #"<="
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 3 #"Gte"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 2 #">="
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 2 #"Eq"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 2 #"=="
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 11 #"StrContains"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 16 #"string-contains?"
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 8 #"StrSplit"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 12 #"string-split"
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 9 #"StrEquals"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 14 #"string-equals?"
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 9 #"StrConcat"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 13 #"string-concat"
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 9 #"StrAppend"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 13 #"string-append"
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 11 #"StrPrefixOf"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 17 #"string-prefix-of?"
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 6 #"StrRef"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 10 #"string-ref"
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 11 #"ArrContains"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 15 #"array-contains?"
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 8 #"ArrSplit"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 11 #"array-split"
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 9 #"ArrEquals"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 13 #"array-equals?"
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 9 #"ArrConcat"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 12 #"array-concat"
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 9 #"ArrAppend"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 12 #"array-append"
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 11 #"ArrPrefixOf"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 12 #"array-append"
0 0 19 3 1 #"("
0 0 19 3 2 #"~a"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 12 #"define-binop"
0 0 25 3 1 #" "
0 0 14 3 6 #"ArrRef"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 9 #"array-ref"
0 0 19 3 1 #" "
0 0 19 3 2 #"~a"
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 11 #"define-unop"
0 0 25 3 1 #" "
0 0 14 3 6 #"String"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"\\\"~a\\\""
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 11 #"define-unop"
0 0 25 3 1 #" "
0 0 14 3 5 #"Array"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"["
0 0 19 3 3 #"~a]"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 11 #"define-unop"
0 0 25 3 1 #" "
0 0 14 3 3 #"Not"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"!~a"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 11 #"define-unop"
0 0 25 3 1 #" "
0 0 14 3 6 #"StrLen"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 10 #"string-len"
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 11 #"define-unop"
0 0 25 3 1 #" "
0 0 14 3 8 #"StrEmpty"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 13 #"string-empty?"
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 11 #"define-unop"
0 0 25 3 1 #" "
0 0 14 3 6 #"ArrLen"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 9 #"array-len"
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 11 #"define-unop"
0 0 25 3 1 #" "
0 0 14 3 8 #"ArrEmpty"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 12 #"array-empty?"
0 0 19 3 1 #" "
0 0 19 3 3 #"~a)"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";; Helper functions"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"operators"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 2 #"\"+"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 19 3 2 #"\"-"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 19 3 2 #"\"*"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 19 3 2 #"\"/"
0 0 19 3 1 #"\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"operator?"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"member"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 14 3 9 #"operators"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"type?"
0 0 25 3 1 #" "
0 0 14 3 3 #"sym"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"num"
0 0 25 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"string"
0 0 25 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"array"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"op-sym->constr"
0 0 25 3 1 #" "
0 0 14 3 5 #"opsym"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 25 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 25 3 1 #" "
0 0 14 3 5 #"opsym"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 19 3 2 #"\"+"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 14 3 3 #"Add"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 19 3 2 #"\"-"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 14 3 5 #"Minus"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 19 3 2 #"\"*"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 14 3 4 #"Mult"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 19 3 2 #"\"/"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 14 3 3 #"Div"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";; Printing"
0 0 25 29 1 #"\n"
0 9         301 22           0 0           0 49 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"show-args"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"string-join"
0 0 25 3 2 #" ("
0 0 14 3 3 #"map"
0 0 25 3 1 #" "
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 2 #") "
0 0 19 3 4 #"\", \""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"show-fn-body"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 11 #"string-join"
0 0 25 3 2 #" ("
0 0 14 3 3 #"map"
0 0 25 3 1 #" "
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 2 #") "
0 0 19 3 4 #"\"\\n\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 19 3 4 #"\"\\n\""
0 0 25 3 2 #"))"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 9        1897 22           0 0           0 315 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 3 #"ast"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 25 3 1 #" "
0 0 14 3 3 #"ast"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"Type"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #") ("
0 0 14 3 2 #"~a"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"Const"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 4 #")  ("
0 0 14 3 2 #"~a"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"Var"
0 0 25 3 1 #" "
0 0 14 3 4 #"name"
0 0 25 3 3 #") ("
0 0 14 3 2 #"~a"
0 0 25 3 1 #" "
0 0 14 3 4 #"name"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"String"
0 0 25 3 1 #" "
0 0 14 3 8 #"contents"
0 0 25 3 3 #") ("
0 0 14 3 2 #"~a"
0 0 25 3 1 #" "
0 0 14 3 8 #"contents"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"Array"
0 0 25 3 1 #" "
0 0 14 3 8 #"contents"
0 0 25 3 3 #") ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"[~a]\""
0 0 25 3 2 #" ("
0 0 14 3 11 #"string-join"
0 0 25 3 1 #" "
0 0 19 3 4 #"\", \""
0 0 25 3 2 #" ("
0 0 14 3 3 #"map"
0 0 25 3 1 #" "
0 0 14 3 2 #"~a"
0 0 25 3 1 #" "
0 0 14 3 8 #"contents"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"Range"
0 0 25 3 1 #" "
0 0 14 3 2 #"lo"
0 0 25 3 1 #" "
0 0 14 3 2 #"hi"
0 0 25 3 3 #") ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"{~a, ~a}\""
0 0 25 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 25 3 1 #" "
0 0 14 3 2 #"lo"
0 0 25 3 3 #") ("
0 0 14 3 2 #"~a"
0 0 25 3 1 #" "
0 0 14 3 2 #"hi"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"Arg"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 14 3 5 #"range"
0 0 25 3 3 #") ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"~a ~a~a\""
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 4 #"name"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 5 #"range"
0 0 25 3 2 #" ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 5 #"range"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 25 3 2 #" ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 5 #"range"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                       "
0 0 19 3 2 #"\"\""
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 7 #"FuncDec"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 3 #") ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 16 #"\"~a ~a(~a) {~a}\""
0 0 25 29 1 #"\n"
0 0 25 3 44 #"                                           ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 43 #"                                           "
0 0 14 3 4 #"name"
0 0 25 29 1 #"\n"
0 0 25 3 44 #"                                           ("
0 0 14 3 9 #"show-args"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 44 #"                                           ("
0 0 14 3 12 #"show-fn-body"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"Decl"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 3 #"var"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 3 #") ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"~a ~a = ~a\""
0 0 25 3 2 #" ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 3 #") ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 3 #"var"
0 0 25 3 3 #") ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"Return"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 3 #") ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"return ~a\""
0 0 25 3 2 #" ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"Add"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #") ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"(~a + ~a)\""
0 0 25 3 2 #" ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 3 #") ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"Minus"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #") ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"(~a - ~a)\""
0 0 25 3 2 #" ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 3 #") ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 4 #"Mult"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #") ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"(~a * ~a)\""
0 0 25 3 2 #" ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 3 #") ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"Div"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #") ("
0 0 14 3 6 #"format"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"(~a * ~a)\""
0 0 25 3 2 #" ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 3 #") ("
0 0 14 3 8 #"show-ast"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 5 #"empty"
0 0 25 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0           0 0           0
